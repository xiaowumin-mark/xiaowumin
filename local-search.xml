<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>码语库记memo便签实现</title>
    <link href="/2024/07/17/%E7%A0%81%E8%AF%AD%E5%BA%93%E8%AE%B0memo%E5%AE%9E%E7%8E%B0/"/>
    <url>/2024/07/17/%E7%A0%81%E8%AF%AD%E5%BA%93%E8%AE%B0memo%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="码语库记memo实现"><a href="#码语库记memo实现" class="headerlink" title="码语库记memo实现"></a>码语库记memo实现</h1><h3 id="第一版："><a href="#第一版：" class="headerlink" title="第一版："></a>第一版：</h3><p>使用markdown作为编辑器，感觉有点牺牲效率，也不是所有人都会markdown的编辑</p><h3 id="第二版"><a href="#第二版" class="headerlink" title="第二版"></a>第二版</h3><p>所以我又出了个方案，不用markdown，使用html自带的<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/contenteditable">contenteditable</a>属性。可以将html变为可编辑属性，可以粘贴图片，输入文字。</p><p>首先将函数先封装好</p><p><img src="https://pic.imgdb.cn/item/66974401d9c307b7e99a64f3.png"></p><p>让后将ipc事件注册好</p><p><img src="https://pic.imgdb.cn/item/66974444d9c307b7e99af276.png"></p><p>整体逻辑是：</p><p>在memo文件夹下有个<code>config.json</code>配置文件，格式如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>        name<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        path<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        time<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;unix&quot;</span><span class="hljs-punctuation">,</span><br>        id<span class="hljs-punctuation">:</span><span class="hljs-string">&quot;unix&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>        ...<br>    <span class="hljs-punctuation">&#125;</span><br>        ...<br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>其中path指向的是文件本身(码语库记识别自创的文件格式<code>.mj</code>)</p><h4 id="一个小问题"><a href="#一个小问题" class="headerlink" title="一个小问题"></a>一个小问题</h4><p>我打算在编辑便签时新建一个窗口，但是想要打开便签编辑的窗口需要指定路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> win = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BrowserWindow</span>(&#123;<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">800</span>,<br>    <span class="hljs-attr">height</span>: <span class="hljs-number">600</span>,<br>    <span class="hljs-attr">webPreferences</span>: &#123;<br>        <span class="hljs-attr">nodeIntegration</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 允许使用node</span><br>        <span class="hljs-attr">contextIsolation</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 允许使用contextBridge</span><br>        <span class="hljs-attr">enableRemoteModule</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 允许使用remote</span><br>    &#125;<br>&#125;)<br><span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">VITE_DEV_SERVER_URL</span>) &#123;<br>    win.<span class="hljs-title function_">loadURL</span>(process.<span class="hljs-property">env</span>.<span class="hljs-property">VITE_DEV_SERVER_URL</span>+<span class="hljs-string">&quot;?page=ememo&quot;</span>)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    win.<span class="hljs-title function_">loadFile</span>(<span class="hljs-string">&quot;dist/index.html?page=ememo&quot;</span>)<br>&#125;<br><br>win.<span class="hljs-property">webContents</span>.<span class="hljs-title function_">openDevTools</span>()<br></code></pre></td></tr></table></figure><p>我于是想到了这个方法，指定query参数，让后让页面自动获取，让后跳转到对应的页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./assets/main.css&#x27;</span><br><br><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;mdui/mdui.css&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;mdui&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;mdui/components/icon.js&#x27;</span>;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">use</span>(router)<br><span class="hljs-comment">// 获取query page参数</span><br><span class="hljs-keyword">const</span> query = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">search</span>;<br><span class="hljs-comment">// 获取query参数中的page参数</span><br><span class="hljs-keyword">const</span> page = <span class="hljs-keyword">new</span> <span class="hljs-title class_">URLSearchParams</span>(query).<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;page&#x27;</span>);<br><br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br><br><span class="hljs-keyword">if</span> (page) &#123;<br>    router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;/&quot;</span> + page)<br>&#125;<br></code></pre></td></tr></table></figure><p>其中遇到了一个小问题，花了我一个多小时</p><p><img src="https://pic.imgdb.cn/item/6697725fd9c307b7e9065a8f.png"></p><p><img src="https://pic.imgdb.cn/item/66977270d9c307b7e9068b9a.png"></p><p>这就很神奇，我也是在哪怀疑是不是vue-router有bug，后来也是看到了一篇文章<a href="https://blog.csdn.net/Jone_hui/article/details/123041404">https://blog.csdn.net/Jone_hui&#x2F;article&#x2F;details&#x2F;123041404</a></p><p>感谢这位大哥🙏！！</p><p>因为useRoute是异步的所以有延时！！</p><p>只要在main.js中等待他加载完成就行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.<span class="hljs-title function_">isReady</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>))<br></code></pre></td></tr></table></figure><p>也是服了，整天跟bug斗智斗勇。。。。</p>]]></content>
    
    
    <categories>
      
      <category>码语库记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>码语库记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>码语库记的开发流程</title>
    <link href="/2024/07/16/My%20firt%20blog/"/>
    <url>/2024/07/16/My%20firt%20blog/</url>
    
    <content type="html"><![CDATA[<h1 id="码语库记的功能介绍，和以及实现方法"><a href="#码语库记的功能介绍，和以及实现方法" class="headerlink" title="码语库记的功能介绍，和以及实现方法"></a>码语库记的功能介绍，和以及实现方法</h1><blockquote><p>码语库记的仓库地址为：<a href="https://gitee.com/xiaowumin-mark/CodeSpeak-LibraryNotes">码语库记</a> </p></blockquote><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><h3 id="全部功能预览"><a href="#全部功能预览" class="headerlink" title="全部功能预览"></a>全部功能预览</h3><ul><li>搜索所写过的所有笔记，便签，函数功能</li><li>笔记</li><li>便签（随记）</li><li>函数笔记</li><li>设置</li></ul><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>实现方式：</p><p>遍历所有文章，便签，查找所匹配的项目。</p><blockquote><p>这个比较简单，就不多说了</p></blockquote><h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><p>提供所有<code>MarkDown</code>功能，使用<code>vditor</code>作为markdown编辑器</p><p>支持及时渲染，类似Typora</p><p>支持笔记分类</p><p>支持常规操作，删除，重命名，新建，导出</p><h3 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h3><p>不使用<code>MarkDown</code>编辑器，因为便签讲究快速，便捷</p><p>所以只支持输入文字，加粗，斜体，粘贴图片</p><p>可以使用快捷键快速呼出便签，快速录入。</p><p>便签名默认为第一行输入的内容</p><p>支持常规操作，删除，重命名，新建，不支持导出</p><h3 id="函数笔记"><a href="#函数笔记" class="headerlink" title="函数笔记"></a>函数笔记</h3><blockquote><p>规划中…</p></blockquote><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>配置文件将在第一次打开软件自动在<code>C:\User\YourUserName\AppData\Roaming\CodeSpeak-LibraryNotes</code>下创建一个名为<code>scln-config.json</code>文件</p><p>具体内容为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;author&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xiaowumin &amp; SanWei&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;CodeSpeak-LibraryNotes&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;CodeSpeak-LibraryNotes&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;warehouse&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;main&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gitee.com/xiaowumin-mark/CodeSpeak-LibraryNotes&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;releases&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gitee.com/xiaowumin-mark/CodeSpeak-LibraryNotes/releases&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;all_releases&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gitee.com/api/v5/repos/xiaowumin-mark/CodeSpeak-LibraryNotes/releases?page=1&amp;per_page=100&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;latest_release&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gitee.com/api/v5/repos/xiaowumin-mark/CodeSpeak-LibraryNotes/releases/latest&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;note_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;C:\\Users\\YourUserName\\AppData\\Local\\CodeSpeak-LibraryNotes&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;config_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;C:\\Users\\YourUserName\\AppData\\Roaming\\CodeSpeak-LibraryNotes\\csln-config.json&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;setting&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;auto_update&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;theme&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;auto&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;color_theme&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;auto&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="功能难点（我认为）"><a href="#功能难点（我认为）" class="headerlink" title="功能难点（我认为）"></a>功能难点（我认为）</h2><h3 id="主题切换效果"><a href="#主题切换效果" class="headerlink" title="主题切换效果"></a>主题切换效果</h3><p>起因：bilibili客户端的主题切换效果很炫酷，但是一直没有思路。</p><p>偶然有一天想起可以用<code>animate</code>动画的<code>clip-path</code>属性画圆</p><p>但是因为主题要变动所以画圆时整个body元素是被切割的</p><p>偶然有一天，知道了<code>startViewTransition</code>这个api，于是一切就变得顺利起来了</p><p>只要在<code>document.startViewTransition</code>里面运行改变样式的代码，这样就可以让主题变化变得不那么生硬</p><p>但是我想要的是画圆效果，就必须要将动画加上去</p><p>于是去看文档<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document/startViewTransition">https://developer.mozilla.org/zh-CN/docs/Web/API/Document/startViewTransition</a></p><p>最后封装为一个函数,要用到勾股定理哦~</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeTheme</span>(<span class="hljs-params">type, if_animate = <span class="hljs-literal">true</span></span>) &#123;<br>    <span class="hljs-keyword">let</span> html = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span><br>    <span class="hljs-comment">//html.classList.add(&quot;all-animate&quot;)</span><br>    <span class="hljs-comment">//console.log(html.classList);</span><br>    <span class="hljs-keyword">const</span> transition = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">startViewTransition</span>(<span class="hljs-title function_">async</span> () =&gt; &#123;<br><br>        <span class="hljs-keyword">let</span> o_type = <span class="hljs-title function_">getThemeType</span>()<br>        <span class="hljs-keyword">if</span> (type == o_type) &#123;<br>            <span class="hljs-keyword">return</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (type == <span class="hljs-string">&quot;dark&quot;</span>) &#123;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;mdui-theme-dark&#x27;</span>)) &#123;<br>                <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;mdui-theme-dark&#x27;</span>)<br>                <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.nav&quot;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">borderRight</span> = <span class="hljs-string">&quot;1px solid rgb(45 45 45)&quot;</span><br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (type == <span class="hljs-string">&quot;light&quot;</span>) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;mdui-theme-dark&#x27;</span>)) &#123;<br>                <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;mdui-theme-dark&#x27;</span>)<br>                <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.nav&quot;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">borderRight</span> = <span class="hljs-string">&quot;1px solid rgb(230 230 230)&quot;</span><br>            &#125;<br>        &#125;<br><br>    &#125;);<br>    <span class="hljs-keyword">if</span> (if_animate) &#123;<br><br><br>        <span class="hljs-keyword">const</span> x = event.<span class="hljs-property">pageX</span> || (event.<span class="hljs-property">clientX</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollX</span>);<br>        <span class="hljs-keyword">const</span> y = event.<span class="hljs-property">pageY</span> || (event.<span class="hljs-property">clientY</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span>);<br>        <span class="hljs-comment">// 从点击点到窗口最远边缘的距离，这个距离即为圆的半径，用于确定一个圆形裁剪路径 (clip path) 的最大尺寸，以便覆盖整个视窗。</span><br>        <span class="hljs-comment">// 勾股定理：a² + b² = c²</span><br>        <span class="hljs-keyword">const</span> radius = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(x, (<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> - x)) ** <span class="hljs-number">2</span> + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(y, (<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> - y)) ** <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">let</span> clipPath = [<br>            <span class="hljs-string">`circle(0 at <span class="hljs-subst">$&#123;x&#125;</span>px <span class="hljs-subst">$&#123;y&#125;</span>px)`</span>,<br>            <span class="hljs-string">`circle(<span class="hljs-subst">$&#123;radius&#125;</span>px at <span class="hljs-subst">$&#123;x&#125;</span>px <span class="hljs-subst">$&#123;y&#125;</span>px)`</span>,<br>        ]<br>        <span class="hljs-keyword">let</span> is_dark = html.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;mdui-theme-dark&#x27;</span>)<br>        transition.<span class="hljs-property">ready</span>.<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-comment">// 实现过渡的过程 circle</span><br>            <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">animate</span>(<br>                &#123;<br>                    <span class="hljs-attr">clipPath</span>: clipPath,<br>                &#125;,<br>                &#123;<br>                    <span class="hljs-attr">duration</span>: <span class="hljs-number">300</span>,<br>                    <span class="hljs-attr">pseudoElement</span>: <span class="hljs-string">&#x27;::view-transition-new(root)&#x27;</span>,<br>                &#125;<br>            )<br>        &#125;)<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>这是最终的效果图 ↓</p><p><img src="https://pic.imgdb.cn/item/6696039ed9c307b7e9892468.png" alt="https://pic.imgdb.cn/item/6696039ed9c307b7e9892468.png"></p><p>这个东西也是花了我一天……</p>]]></content>
    
    
    <categories>
      
      <category>码语库记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>码语库记</tag>
      
      <tag>第一次</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
